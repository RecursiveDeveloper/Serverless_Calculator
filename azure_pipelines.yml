trigger:
  branches:
    include:
      - 'main'
      - 'azure-pipelines'
pr: none

pool: 
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: Prerequisites
        displayName: 'Prerequisites'
        steps:
          - task: NodeTool@0
            displayName: 'Node.js installation'
            inputs:
              versionSource: 'spec'
              versionSpec: '20.x'
      - job: BuildArtifact
        displayName: 'Build Artifact'
        dependsOn: Prerequisites
        condition: succeeded()
        steps:
          - task: Npm@1
            displayName: 'Dependencies installation'
            inputs:
              command: 'custom'
              workingDir: '$(System.DefaultWorkingDirectory)/app'
              customCommand: 'install'

          - script: |
              echo Installing OWASP Dependency Check...
              wget https://github.com/jeremylong/DependencyCheck/releases/download/v10.0.4/dependency-check-10.0.4-release.zip
              unzip dependency-check-10.0.4-release.zip
            displayName: 'Install OWASP Dependency Check'

          - script: |
              echo Running OWASP Dependency Check...
              ./dependency-check/bin/dependency-check.sh --project "Serverless_Calculator" --scan "$(System.DefaultWorkingDirectory)/app" --out "$(Build.ArtifactStagingDirectory)/dependency-check-report"
            displayName: 'Run OWASP Dependency Check'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/dependency-check-report'
              artifact: 'OWASPDependencyCheckReport' 

          - task: ArchiveFiles@2
            displayName: 'Artifact archiving'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/app'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
          - task: PublishPipelineArtifact@1
            displayName: 'Artifact publishing'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactName: '$(Build.BuildId).zip'
          
  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: DeployArtifact
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Artifact download'
            inputs:
              artifact: '$(Build.BuildId).zip'
          - task: LambdaDeployFunction@1
            displayName: 'Lambda function deploy'
            inputs:
              awsCredentials: 'AWS_Connection'
              regionName: 'us-east-1'
              deploymentMode: 'codeonly'
              functionName: 'hello_world'
              codeLocation: 'localfile'
              localZipFile: '$(Pipeline.Workspace)/$(Build.BuildId).zip'
