trigger:
  branches:
    include:
      - 'main'
      - 'azure-pipelines'
pr: none

pool: 
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: Prerequisites
        displayName: 'Prerequisites'
        steps:
          - task: NodeTool@0
            inputs:
              versionSource: 'spec'
              versionSpec: '20.x'
      - job: BuildArtifact
        displayName: 'Build Artifact'
        dependsOn: Prerequisites
        condition: succeeded()
        steps:
          - task: Npm@1
            inputs:
              command: 'custom'
              workingDir: '$(System.DefaultWorkingDirectory)/app'
              customCommand: 'install'
          - script: ls -la $(System.DefaultWorkingDirectory)
          - script: ls -la $(System.DefaultWorkingDirectory)/app
          - task: trivy@1
            inputs:
              version: 'latest'
              path: './app'
              exitCode: '0'
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/app'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactName: '$(Build.BuildId).zip'
          
  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: DeployArtifact
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: '$(Build.BuildId).zip'
          - task: LambdaDeployFunction@1
            inputs:
              awsCredentials: 'AWS_Connection'
              regionName: 'us-east-1'
              deploymentMode: 'codeonly'
              functionName: 'hello_world'
              codeLocation: 'localfile'
              localZipFile: '$(Pipeline.Workspace)/$(Build.BuildId).zip'
